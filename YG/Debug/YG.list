
YG.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001dc  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000384  0800038c  0001038c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000384  08000384  0001038c  2**0
                  CONTENTS
  4 .ARM          00000000  08000384  08000384  0001038c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000384  0800038c  0001038c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000384  08000384  00010384  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000388  08000388  00010388  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001038c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0001038c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0001038c  2**0
                  CONTENTS, READONLY
 13 .debug_info   000000e6  00000000  00000000  000103b6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000b6  00000000  00000000  0001049c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000060  00000000  00000000  00010558  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000048  00000000  00000000  000105b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000abf  00000000  00000000  00010600  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000179  00000000  00000000  000110bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00002e24  00000000  00000000  00011238  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001405c  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000c0  00000000  00000000  000140ac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	0800036c 	.word	0x0800036c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	0800036c 	.word	0x0800036c

080001e8 <adddelay>:
#define gpiodP14ofmask 0<<14
#define gpiodP13onmask 1<<13
#define gpiodP13ofmask ~(1<<13)


void adddelay(){
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
     int addelay= 0x0FFFFFFF;
 80001ee:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 80001f2:	607b      	str	r3, [r7, #4]
     while(addelay--){
 80001f4:	bf00      	nop
 80001f6:	687b      	ldr	r3, [r7, #4]
 80001f8:	1e5a      	subs	r2, r3, #1
 80001fa:	607a      	str	r2, [r7, #4]
 80001fc:	2b00      	cmp	r3, #0
 80001fe:	d1fa      	bne.n	80001f6 <adddelay+0xe>
    	 }
     }
 8000200:	bf00      	nop
 8000202:	bf00      	nop
 8000204:	370c      	adds	r7, #12
 8000206:	46bd      	mov	sp, r7
 8000208:	bc80      	pop	{r7}
 800020a:	4770      	bx	lr

0800020c <yigitonat>:

void yigitonat(){
 800020c:	b580      	push	{r7, lr}
 800020e:	af00      	add	r7, sp, #0
	//KIRMIZI LED'IN YANIP SONMESI
	gpiodOdr=gpiodP14onmask;
 8000210:	4b09      	ldr	r3, [pc, #36]	; (8000238 <yigitonat+0x2c>)
 8000212:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000216:	601a      	str	r2, [r3, #0]
	adddelay(2000);
 8000218:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 800021c:	f7ff ffe4 	bl	80001e8 <adddelay>
	gpiodOdr&=gpiodP14ofmask;
 8000220:	4b05      	ldr	r3, [pc, #20]	; (8000238 <yigitonat+0x2c>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4b04      	ldr	r3, [pc, #16]	; (8000238 <yigitonat+0x2c>)
 8000226:	2200      	movs	r2, #0
 8000228:	601a      	str	r2, [r3, #0]
	adddelay(2000);
 800022a:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 800022e:	f7ff ffdb 	bl	80001e8 <adddelay>
}
 8000232:	bf00      	nop
 8000234:	bd80      	pop	{r7, pc}
 8000236:	bf00      	nop
 8000238:	40020c14 	.word	0x40020c14

0800023c <gokdemir>:
void gokdemir(){
 800023c:	b580      	push	{r7, lr}
 800023e:	af00      	add	r7, sp, #0
	//TURUNCU LED'IN YANIP SONMESI
	gpiodOdr |=gpiodP13onmask;
 8000240:	4b0a      	ldr	r3, [pc, #40]	; (800026c <gokdemir+0x30>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	4a09      	ldr	r2, [pc, #36]	; (800026c <gokdemir+0x30>)
 8000246:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800024a:	6013      	str	r3, [r2, #0]
	adddelay(2000);
 800024c:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8000250:	f7ff ffca 	bl	80001e8 <adddelay>
	gpiodOdr&=gpiodP13ofmask;
 8000254:	4b05      	ldr	r3, [pc, #20]	; (800026c <gokdemir+0x30>)
 8000256:	681b      	ldr	r3, [r3, #0]
 8000258:	4a04      	ldr	r2, [pc, #16]	; (800026c <gokdemir+0x30>)
 800025a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800025e:	6013      	str	r3, [r2, #0]
	adddelay(2000);
 8000260:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8000264:	f7ff ffc0 	bl	80001e8 <adddelay>
}
 8000268:	bf00      	nop
 800026a:	bd80      	pop	{r7, pc}
 800026c:	40020c14 	.word	0x40020c14

08000270 <main>:
int main () {
 8000270:	b580      	push	{r7, lr}
 8000272:	b082      	sub	sp, #8
 8000274:	af00      	add	r7, sp, #0
      rccahb1enR =gpiodmask;
 8000276:	4b14      	ldr	r3, [pc, #80]	; (80002c8 <main+0x58>)
 8000278:	2208      	movs	r2, #8
 800027a:	601a      	str	r2, [r3, #0]
      gpiodModr=gpiodP14mask;
 800027c:	4b13      	ldr	r3, [pc, #76]	; (80002cc <main+0x5c>)
 800027e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8000282:	601a      	str	r2, [r3, #0]
      gpiodModr |=gpiodP13mask;
 8000284:	4b11      	ldr	r3, [pc, #68]	; (80002cc <main+0x5c>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	4a10      	ldr	r2, [pc, #64]	; (80002cc <main+0x5c>)
 800028a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800028e:	6013      	str	r3, [r2, #0]

      //Name:yigitonat, kirmizi ledi 9 defa ac kapa
      for(int i=1;i<=9;i++){
 8000290:	2301      	movs	r3, #1
 8000292:	607b      	str	r3, [r7, #4]
 8000294:	e004      	b.n	80002a0 <main+0x30>
		yigitonat();
 8000296:	f7ff ffb9 	bl	800020c <yigitonat>
      for(int i=1;i<=9;i++){
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	3301      	adds	r3, #1
 800029e:	607b      	str	r3, [r7, #4]
 80002a0:	687b      	ldr	r3, [r7, #4]
 80002a2:	2b09      	cmp	r3, #9
 80002a4:	ddf7      	ble.n	8000296 <main+0x26>
	}

      //Surname:gokdemir, turuncu ledi 8 defa ac kapa
      for(int i=1;i<=8;i++){
 80002a6:	2301      	movs	r3, #1
 80002a8:	603b      	str	r3, [r7, #0]
 80002aa:	e004      	b.n	80002b6 <main+0x46>
    	  	gokdemir();
 80002ac:	f7ff ffc6 	bl	800023c <gokdemir>
      for(int i=1;i<=8;i++){
 80002b0:	683b      	ldr	r3, [r7, #0]
 80002b2:	3301      	adds	r3, #1
 80002b4:	603b      	str	r3, [r7, #0]
 80002b6:	683b      	ldr	r3, [r7, #0]
 80002b8:	2b08      	cmp	r3, #8
 80002ba:	ddf7      	ble.n	80002ac <main+0x3c>
        }

	return 0;
 80002bc:	2300      	movs	r3, #0

}
 80002be:	4618      	mov	r0, r3
 80002c0:	3708      	adds	r7, #8
 80002c2:	46bd      	mov	sp, r7
 80002c4:	bd80      	pop	{r7, pc}
 80002c6:	bf00      	nop
 80002c8:	40023830 	.word	0x40023830
 80002cc:	40020c00 	.word	0x40020c00

080002d0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002d0:	480d      	ldr	r0, [pc, #52]	; (8000308 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002d2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002d4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002d8:	480c      	ldr	r0, [pc, #48]	; (800030c <LoopForever+0x6>)
  ldr r1, =_edata
 80002da:	490d      	ldr	r1, [pc, #52]	; (8000310 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002dc:	4a0d      	ldr	r2, [pc, #52]	; (8000314 <LoopForever+0xe>)
  movs r3, #0
 80002de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002e0:	e002      	b.n	80002e8 <LoopCopyDataInit>

080002e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002e6:	3304      	adds	r3, #4

080002e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002ec:	d3f9      	bcc.n	80002e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ee:	4a0a      	ldr	r2, [pc, #40]	; (8000318 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002f0:	4c0a      	ldr	r4, [pc, #40]	; (800031c <LoopForever+0x16>)
  movs r3, #0
 80002f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002f4:	e001      	b.n	80002fa <LoopFillZerobss>

080002f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002f8:	3204      	adds	r2, #4

080002fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002fc:	d3fb      	bcc.n	80002f6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002fe:	f000 f811 	bl	8000324 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000302:	f7ff ffb5 	bl	8000270 <main>

08000306 <LoopForever>:

LoopForever:
    b LoopForever
 8000306:	e7fe      	b.n	8000306 <LoopForever>
  ldr   r0, =_estack
 8000308:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800030c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000310:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000314:	0800038c 	.word	0x0800038c
  ldr r2, =_sbss
 8000318:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800031c:	2000001c 	.word	0x2000001c

08000320 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000320:	e7fe      	b.n	8000320 <ADC_IRQHandler>
	...

08000324 <__libc_init_array>:
 8000324:	b570      	push	{r4, r5, r6, lr}
 8000326:	4d0d      	ldr	r5, [pc, #52]	; (800035c <__libc_init_array+0x38>)
 8000328:	4c0d      	ldr	r4, [pc, #52]	; (8000360 <__libc_init_array+0x3c>)
 800032a:	1b64      	subs	r4, r4, r5
 800032c:	10a4      	asrs	r4, r4, #2
 800032e:	2600      	movs	r6, #0
 8000330:	42a6      	cmp	r6, r4
 8000332:	d109      	bne.n	8000348 <__libc_init_array+0x24>
 8000334:	4d0b      	ldr	r5, [pc, #44]	; (8000364 <__libc_init_array+0x40>)
 8000336:	4c0c      	ldr	r4, [pc, #48]	; (8000368 <__libc_init_array+0x44>)
 8000338:	f000 f818 	bl	800036c <_init>
 800033c:	1b64      	subs	r4, r4, r5
 800033e:	10a4      	asrs	r4, r4, #2
 8000340:	2600      	movs	r6, #0
 8000342:	42a6      	cmp	r6, r4
 8000344:	d105      	bne.n	8000352 <__libc_init_array+0x2e>
 8000346:	bd70      	pop	{r4, r5, r6, pc}
 8000348:	f855 3b04 	ldr.w	r3, [r5], #4
 800034c:	4798      	blx	r3
 800034e:	3601      	adds	r6, #1
 8000350:	e7ee      	b.n	8000330 <__libc_init_array+0xc>
 8000352:	f855 3b04 	ldr.w	r3, [r5], #4
 8000356:	4798      	blx	r3
 8000358:	3601      	adds	r6, #1
 800035a:	e7f2      	b.n	8000342 <__libc_init_array+0x1e>
 800035c:	08000384 	.word	0x08000384
 8000360:	08000384 	.word	0x08000384
 8000364:	08000384 	.word	0x08000384
 8000368:	08000388 	.word	0x08000388

0800036c <_init>:
 800036c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800036e:	bf00      	nop
 8000370:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000372:	bc08      	pop	{r3}
 8000374:	469e      	mov	lr, r3
 8000376:	4770      	bx	lr

08000378 <_fini>:
 8000378:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800037a:	bf00      	nop
 800037c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800037e:	bc08      	pop	{r3}
 8000380:	469e      	mov	lr, r3
 8000382:	4770      	bx	lr
